Definition of users
create table public.users (
  id uuid not null default extensions.uuid_generate_v4 (),
  email text not null,
  first_name text not null,
  last_name text not null,
  role public.user_role not null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  department_name text null,
  user_id uuid null,
  constraint users_pkey primary key (id),
  constraint users_email_key unique (email),
  constraint users_department_name_fkey foreign KEY (department_name) references departments (name)
) TABLESPACE pg_default;


enrollments 
create table public.enrollments (
  id uuid not null default extensions.uuid_generate_v4 (),
  student_id uuid not null,
  class_id uuid not null,
  created_at timestamp with time zone null default now(),
  constraint enrollments_pkey primary key (id),
  constraint enrollments_student_id_class_id_key unique (student_id, class_id),
  constraint enrollments_class_id_fkey foreign KEY (class_id) references classes (id) on delete CASCADE,
  constraint enrollments_student_id_fkey foreign KEY (student_id) references users (id) on delete CASCADE
) TABLESPACE pg_default;

create trigger after_enrollment_created
after INSERT on enrollments for EACH row
execute FUNCTION log_enrollment_creation ();

create trigger ensure_valid_student BEFORE INSERT
or
update on enrollments for EACH row
execute FUNCTION validate_student_enrollment ();

logs
create table public.logs (
  id uuid not null default extensions.uuid_generate_v4 (),
  user_id uuid not null,
  action text not null,
  timestamp timestamp with time zone null default now(),
  constraint logs_pkey primary key (id),
  constraint logs_user_id_fkey foreign KEY (user_id) references users (id) on delete CASCADE
) TABLESPACE pg_default;


departments
create table public.departments (
  id uuid not null default extensions.uuid_generate_v4 (),
  name text not null,
  hod_id uuid null,
  constraint departments_pkey primary key (id),
  constraint departments_name_key unique (name),
  constraint departments_hod_id_fkey foreign KEY (hod_id) references users (id)
) TABLESPACE pg_default;

create trigger after_department_created
after INSERT on departments for EACH row
execute FUNCTION log_department_creation ();

create trigger ensure_valid_hod BEFORE INSERT
or
update on departments for EACH row
execute FUNCTION validate_hod_assignment ();

classes
create table public.classes (
  id uuid not null default extensions.uuid_generate_v4 (),
  name text not null,
  teacher_id uuid null,
  program_id uuid not null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  department_id uuid null,
  constraint classes_pkey primary key (id),
  constraint classes_name_program_id_key unique (name, program_id),
  constraint classes_program_id_fkey foreign KEY (program_id) references programs (id) on delete CASCADE,
  constraint classes_teacher_id_fkey foreign KEY (teacher_id) references users (id),
  constraint fk_classes_departments foreign KEY (department_id) references departments (id)
) TABLESPACE pg_default;

create index IF not exists idx_classes_department_id on public.classes using btree (department_id) TABLESPACE pg_default;

create trigger after_class_created
after INSERT on classes for EACH row
execute FUNCTION log_class_creation ();

create trigger ensure_valid_teacher BEFORE INSERT
or
update on classes for EACH row
execute FUNCTION validate_teacher_assignment ();

